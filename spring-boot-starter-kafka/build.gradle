buildscript {
	repositories {
		mavenCentral()
		maven { url "https://repo.spring.io/snapshot" }
		maven { url "https://repo.spring.io/milestone" }
	}
	dependencies {
		classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
	}
}

apply plugin: 'java-library'
apply plugin: 'eclipse'
apply plugin: 'idea'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'
apply plugin: 'maven-publish'
apply plugin: 'com.jfrog.bintray'

repositories {
	mavenCentral()
	maven { url "https://repo.spring.io/snapshot" }
	maven { url "https://repo.spring.io/milestone" }
	maven { url "http://dl.bintray.com/elderbyte/maven" }
}


dependencies {

	// Basic Spring Boot
	api('org.springframework.boot:spring-boot-starter')

	// Jackson (version managed by Spring Boot)
	api('com.fasterxml.jackson.core:jackson-core')
	api('com.fasterxml.jackson.core:jackson-databind')

	// Kafka Client
	api('org.springframework.kafka:spring-kafka')
	compileOnly('org.apache.kafka:kafka-streams')


	api("com.elderbyte.starter:starter:${starterVersion}")


	// Test

	testImplementation("org.springframework.kafka:spring-kafka-test")
	testImplementation("org.springframework.boot:spring-boot-starter-test")
}


jar {
	enabled = true
}

bootJar {
	// Since this is a library, it cant be executed directly
	enabled = false // Don't create a runnable fat jar
}


task javadocJar(type: Jar, dependsOn: javadoc) {
	classifier = 'javadoc'
	from javadoc.destinationDir
}

task sourcesJar(type: Jar, dependsOn: classes) {
	classifier = 'sources'
	from sourceSets.main.allSource
}

artifacts {
	archives sourcesJar, javadocJar
}

// Publishing / Bintray

publishing {
	publications {
		mavenJava(MavenPublication) {
			from components.java

			groupId = project.group
			artifactId = jar.baseName

			artifact sourcesJar
			artifact javadocJar
		}
	}
}

bintray {
	user = project.hasProperty('bintrayUser') ? project.property('bintrayUser') : System.getenv('BINTRAY_USER')
	key = project.hasProperty('bintrayApiKey') ? project.property('bintrayApiKey') : System.getenv('BINTRAY_API_KEY')
	publications = ['mavenJava']

	dryRun = false // Whether to run this as dry-run, without deploying
	publish = true // If version should be auto published after an upload

	pkg {
		repo = 'maven'
		name = "${jar.baseName}"
		userOrg = 'elderbyte'
		licenses = ['Apache-2.0']
		vcsUrl = 'https://github.com/ElderByte-/spring-boot-starter-kafka'

		version {
			name = project.version // Bintray logical version name
		}
	}
}

task upload { dependsOn bintrayUpload }
